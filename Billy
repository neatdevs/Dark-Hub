--Fe Billy Made by Impostr#7910
--Made using Nexo animator, go check them out!
--Also, Shift to Sprint is included.
--Do not believe ANY of the "creators" of this.
--My real Roblox username is ANormalSonicFan, anyone else is a liar.
HumanDied = false
local reanim
local te
local ct
local m
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
game.Players.LocalPlayer.Character=oldchar
wait()
workspace.Camera.CFrame=_G.OldCF
game.Players.LocalPlayer.Character=oldchar
end
loadstring(game:HttpGet(('https://raw.githubusercontent.com/XeneonPlays/Nexo/main/NexoReanimate'),true))()

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

reanim = game.Players.LocalPlayer.Character
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == '' then-- first mode
Mode='1'
elseif k == '' then-- second mode
Mode='2'
elseif k == '' then-- third mode
Mode='3'
end
end)

coroutine.wrap(function()
while true do -- anim changer
if HumanDied then mousechanger:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(39+27*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),1+0*math.cos(sine/13),1+-0.3*math.cos(sine/13))*ANGLES(RAD(210+-24*math.cos(sine/13)),RAD(-35+-24*math.cos(sine/13)),RAD(18+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),1+0*math.cos(sine/13),1+-0.2*math.cos(sine/13))*ANGLES(RAD(210+-15*math.cos(sine/13)),RAD(30+45*math.cos(sine/13)),RAD(-18+16*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0.5*math.cos(sine/13))*ANGLES(RAD(-360+-74*math.cos(sine/13)),RAD(-13+0*math.cos(sine/13)),RAD(13+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0.5*math.cos(sine/13))*ANGLES(RAD(360+74*math.cos(sine/13)),RAD(13+0*math.cos(sine/13)),RAD(-13+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/9),0+0*math.cos(sine/9),0+0*math.cos(sine/9))*ANGLES(RAD(50+21*math.cos(sine/9)),RAD(0+0*math.cos(sine/9)),RAD(0+0*math.cos(sine/9))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/6),1+0*math.cos(sine/6),1+-0.3*math.cos(sine/6))*ANGLES(RAD(210+-24*math.cos(sine/6)),RAD(-35+-24*math.cos(sine/6)),RAD(18+0*math.cos(sine/6))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/10),1+0*math.cos(sine/10),1+-0.2*math.cos(sine/10))*ANGLES(RAD(210+-15*math.cos(sine/10)),RAD(30+45*math.cos(sine/10)),RAD(-18+16*math.cos(sine/10))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/9),-1+0*math.cos(sine/9),0+0.5*math.cos(sine/9))*ANGLES(RAD(-360+-74*math.cos(sine/9)),RAD(-13+0*math.cos(sine/9)),RAD(13+0*math.cos(sine/9))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0.5*math.cos(sine/13))*ANGLES(RAD(360+74*math.cos(sine/13)),RAD(13+0*math.cos(sine/13)),RAD(-13+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/0),0+0*math.cos(sine/0),0+0*math.cos(sine/0))*ANGLES(RAD(0+0*math.cos(sine/0)),RAD(0+0*math.cos(sine/0)),RAD(0+0*math.cos(sine/0))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/15),-0.2+-0.6*math.cos(sine/15),0+0*math.cos(sine/15))*ANGLES(RAD(0+0*math.cos(sine/15)),RAD(0+0*math.cos(sine/15)),RAD(0+0*math.cos(sine/15))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/-15),0.1+-1*math.cos(sine/-15),0+0*math.cos(sine/-15))*ANGLES(RAD(0+0*math.cos(sine/-15)),RAD(0+-41*math.cos(sine/-15)),RAD(37+-39*math.cos(sine/-15))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/-15),0.1+-1*math.cos(sine/-15),0+0*math.cos(sine/-15))*ANGLES(RAD(0+0*math.cos(sine/-15)),RAD(0+41*math.cos(sine/-15)),RAD(-37+39*math.cos(sine/-15))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/15),-0.7+0.7*math.cos(sine/15),0+0*math.cos(sine/15))*ANGLES(RAD(0+0*math.cos(sine/15)),RAD(0+-55*math.cos(sine/15)),RAD(12+0*math.cos(sine/15))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/15),-0.7+0.7*math.cos(sine/15),0+0*math.cos(sine/15))*ANGLES(RAD(1+3*math.cos(sine/15)),RAD(18+30*math.cos(sine/15)),RAD(-17+0*math.cos(sine/15))),.3)
elseif Root.Velocity.Magnitude < 20 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/10),0+0.1*math.cos(sine/10),0+0*math.cos(sine/10))*ANGLES(RAD(-15+-2*math.cos(sine/10)),RAD(0+0*math.cos(sine/10)),RAD(0+0*math.cos(sine/10))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/20),0.5+0*math.cos(sine/20),0+0*math.cos(sine/20))*ANGLES(RAD(6+95*math.cos(sine/20)),RAD(0+0*math.cos(sine/20)),RAD(0+0*math.cos(sine/20))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/20),0.5+0*math.cos(sine/20),0+0*math.cos(sine/20))*ANGLES(RAD(-6+-95*math.cos(sine/20)),RAD(0+0*math.cos(sine/20)),RAD(0+0*math.cos(sine/20))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/20),-1+0*math.cos(sine/20),0+0*math.cos(sine/20))*ANGLES(RAD(-15+88*math.cos(sine/20)),RAD(0+0*math.cos(sine/20)),RAD(0+0*math.cos(sine/20))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/20),-1+0*math.cos(sine/20),0+0*math.cos(sine/20))*ANGLES(RAD(-15+-86*math.cos(sine/20)),RAD(0+0*math.cos(sine/20)),RAD(0+0*math.cos(sine/20))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/2.3),0+-0.16*math.cos(sine/2.3),0+0*math.cos(sine/2.3))*ANGLES(RAD(34+0*math.cos(sine/2.3)),RAD(0+0*math.cos(sine/2.3)),RAD(0+0*math.cos(sine/2.3))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/4),1.3+0*math.cos(sine/4),0.6+0*math.cos(sine/4))*ANGLES(RAD(-140+11*math.cos(sine/4)),RAD(19+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/4),1.3+0*math.cos(sine/4),0.6+0*math.cos(sine/4))*ANGLES(RAD(-140+-11*math.cos(sine/4)),RAD(-19+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/5),-1+0.2*math.cos(sine/5),0+-0.5*math.cos(sine/5))*ANGLES(RAD(14+117*math.cos(sine/5)),RAD(-22+0*math.cos(sine/5)),RAD(1+0*math.cos(sine/5))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/5),-1+0*math.cos(sine/5),0+0*math.cos(sine/5))*ANGLES(RAD(14+-117*math.cos(sine/5)),RAD(22+0*math.cos(sine/5)),RAD(1+0*math.cos(sine/5))),.3)
end
end
srv.RenderStepped:Wait()
end
end)()
 repeat wait() until game.Players.LocalPlayer
local Mouse = game.Players.LocalPlayer:GetMouse()
local Plr = game.Players.LocalPlayer
 
Mouse.KeyDown:connect(function(KeyDown)
if KeyDown == "0" then
Plr.Character.Humanoid.WalkSpeed = 30
end
end)
 
Mouse.KeyUp:connect(function(KeyUp)
if KeyUp == "0" then
Plr.Character.Humanoid.WalkSpeed = 16
end
end)
